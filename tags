!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28b/
"	init.vim	/^inoremap " ""<left>$/;"	m
$(BUILD_DIR)/$(TARGET_EXEC)	Makefile	/^$(BUILD_DIR)\/$(TARGET_EXEC) : $(OBJS)$/;"	t
$(BUILD_DIR)/%.a.o	Makefile	/^$(BUILD_DIR)\/%.a.o : %.s$/;"	t
$(BUILD_DIR)/%.c.o	Makefile	/^$(BUILD_DIR)\/%.c.o : %.c$/;"	t
$(BUILD_DIR)/%.cpp.o	Makefile	/^$(BUILD_DIR)\/%.cpp.o : %.cpp$/;"	t
(	init.vim	/^inoremap ( ()<left>$/;"	m
<C-d>	init.vim	/^noremap <C-d> :NERDTreeToggle<CR>$/;"	m
<C-j>	init.vim	/^nnoremap <C-j> <C-d>$/;"	m
<C-k>	init.vim	/^nnoremap <C-k> <C-u>$/;"	m
<F7>	init.vim	/^noremap <F7> :NERDTreeToggle<CR>$/;"	m
<F8>	init.vim	/^nnoremap <F8> :TagbarToggle<CR>$/;"	m
<S-Tab>	init.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\<C-n>" : "\\<S-Tab>"$/;"	m
<leader>j	init.vim	/^nnoremap <leader>j :m+1<cr>==$/;"	m
<leader>j	init.vim	/^xnoremap <leader>j :m'>-1<cr>gv=gv$/;"	m
<leader>k	init.vim	/^nnoremap <leader>k :m-2<cr>==$/;"	m
<leader>k	init.vim	/^xnoremap <leader>k :m-2<cr>gv=gv$/;"	m
ALL_SRC_F	Makefile	/^ALL_SRC_F := $(shell find $(SRC_DIR) -name *.s -or -name *.cpp -or -name *.c)$/;"	m
ASMB_SRC	Makefile	/^ASMB_SRC := $(shell find $(SRC_DIR) -name *.s)$/;"	m
BUILD_DIR	Makefile	/^BUILD_DIR ?= .\/build$/;"	m
CC	Makefile	/^CC = gcc -std=gnu11$/;"	m
CFLAGS	Makefile	/^CFLAGS =  -O3 -Wall -Wextra -Wpedantic -Wstrict-aliasing$/;"	m
CPP	Makefile	/^CPP = g++ -std=c++11$/;"	m
CPP_SRC	Makefile	/^CPP_SRC := $(shell find $(SRC_DIR) -name *.cpp)$/;"	m
C_SRC	Makefile	/^C_SRC := $(shell find $(SRC_DIR) -name *.c)$/;"	m
DEBUG_FLAGS	Makefile	/^DEBUG_FLAGS = -D DEBUG -g3$/;"	m
DEPS	Makefile	/^DEPS := $(OBJS:.o=.d)$/;"	m
INC_DIRS	Makefile	/^INC_DIRS :=$(shell find $(SRC_DIR) -type d)$/;"	m
INC_FLAGS	Makefile	/^INC_FLAGS := $(addprefix -I,$(INC_DIRS))$/;"	m
LFLAGS	Makefile	/^LFLAGS = $/;"	m
LIB_FLAGS	Makefile	/^LIB_FLAGS = #-l$/;"	m
OBJS	Makefile	/^OBJS := $(ALL_SRC_F:%=$(BUILD_DIR)\/%.o)$/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SRC_DIR	Makefile	/^SRC_DIR ?= .\/src$/;"	m
TARGET_EXEC	Makefile	/^TARGET_EXEC ?= test$/;"	m
[	init.vim	/^inoremap [ []<left>$/;"	m
__MKDIR	Makefile	/^__MKDIR ?= mkdir -p$/;"	m
clean	Makefile	/^clean:$/;"	t
g:ale_linters	init.vim	/^let g:ale_linters = {'cpp':['cppcheck', 'clangtidy']}$/;"	v
g:deoplete#enable_at_startup	init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:python3_host_prog	init.vim	/^let g:python3_host_prog="\/usr\/bin\/python3.6"$/;"	v
jk	init.vim	/^inoremap jk <Esc>$/;"	m
kj	init.vim	/^inoremap kj <Esc>$/;"	m
main	test.c	/^int main(int argc, char * argv[])$/;"	f	typeref:typename:int
mapleader	init.vim	/^let mapleader="\\<Space>"$/;"	v
{	init.vim	/^inoremap { {}<left>$/;"	m
